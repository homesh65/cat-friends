{"version":3,"sources":["component/Cats.js","component/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Cats","props","className","catlist","map","cats","i","src","name","alt","email","Search","searchchange","type","placeholder","onChange","App","onSearchChange","event","newCatLists","state","filter","cat","toLowerCase","includes","target","value","setState","newCatList","document","title","fetch","then","response","json","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qSAiBeA,EAdF,SAACC,GACV,OACI,qBAAMC,UAAU,qCAAhB,SACKD,EAAME,QAAQC,KAAI,SAACC,EAAKC,GAAN,OACf,sBAAaJ,UAAU,sCAAvB,UACI,qBAAKK,IAAG,+BAA0BF,EAAKG,KAA/B,aAAgDC,IAAKJ,EAAKG,OAClE,6BAAKH,EAAKG,OACV,6BAAKH,EAAKK,UAHJJ,SCMXK,EAXA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACb,OACI,8BACI,uBAAOV,UAAU,kDAChBW,KAAK,OACLC,YAAY,iBACZC,SAAUH,OCoCRI,E,kDArCb,aAAc,IAAD,8BACX,gBAeFC,eAAiB,SAACC,GAChB,IAAMC,EAAc,EAAKC,MAAMf,KAAKgB,QAAQ,SAAAC,GAC1C,OAAOA,EAAId,KAAKe,cAAcC,SAASN,EAAMO,OAAOC,MAAMH,kBAE5D,EAAKI,SAAS,CAAEC,WAAYT,KAlB5B,EAAKC,MAAQ,CACTf,KAAO,GACPuB,WAAa,IAJN,E,qDAQb,WAAqB,IAAD,OAChBC,SAASC,MAAQ,cACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACE,GAAU,EAAKP,SAAS,CAAEtB,KAAM6B,EAAMN,WAAYM,S,oBAW/D,WACE,OACE,sBAAKhC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAQU,aAAcuB,KAAKlB,iBAC3B,uBACA,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAAMC,QAASgC,KAAKf,MAAMQ,sB,GA/BlBQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.f4f2f35a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cats.css'\r\n\r\nconst Cats = (props)=>{\r\n    return (\r\n        <div  className='scroller b--dashed b--white-70 pa4'>\r\n            {props.catlist.map((cats,i) => \r\n                <div key={i} className=\"bg-light-green dib br3 pa3 ma2 grow\">\r\n                    <img src={`https://robohash.org/${cats.name}?set=set4`} alt={cats.name}/>\r\n                    <h3>{cats.name}</h3>\r\n                    <h3>{cats.email}</h3>\r\n                </div>    \r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cats;","import React from 'react';\r\n\r\nconst Search = ({searchchange})=>{\r\n    return(\r\n        <div>\r\n            <input className=\"bg-light-green b--dashed b--white-70 f4 br3 pa2\"\r\n             type=\"text\" \r\n             placeholder=\"Search By Name\" \r\n             onChange={searchchange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import './App.css'\nimport './tachyons.css';\nimport Cats from './component/Cats'\nimport Search from './component/Search'\nimport { Component } from 'react';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n        cats : [],\n        newCatList : []\n    }\n  }\n\n  componentDidMount() {\n      document.title = 'Cat Friends';\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then((json) => {this.setState({ cats: json, newCatList: json })} \n      );\n  }\n  \n  onSearchChange = (event) => {\n    const newCatLists = this.state.cats.filter( cat => {\n      return cat.name.toLowerCase().includes(event.target.value.toLowerCase());\n    })\n    this.setState({ newCatList: newCatLists })\n  }\n\n  render(){\n    return (\n      <div className='tc'>\n        <h1 className='f1'>Cat Friends</h1>\n        <Search searchchange={this.onSearchChange} />\n        <br/>\n        <div className='pa2'>\n          <Cats catlist={this.state.newCatList} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}